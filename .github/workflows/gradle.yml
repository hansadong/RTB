# Github Action 설정 파일
name: Backend Build and Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    # 코드를 workflow 환경으로 checkout
    - name: Checkout
      uses: actions/checkout@v4

    # 각자 사용하는 자바 버전에 맞춰 변경
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    # Gradle 세팅 및 빌드
    - name: Build with Gradle Wrapper
      run: ./gradlew build

    # Docker Hub 로그인 후 Docker 빌드 및 푸쉬
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_NAME }} # 도커 허브 계정 아이디
        password: ${{ secrets.DOCKER_PWD }} # 도커 허브 계정 토큰 값

    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_REPO }}:latest # 도커 레퍼지토리는 '사용자 명/이미지 명' 포맷
    # EC2 인스턴스에 ssh 접속하여 도커 컨테이너 배포 진행
    # 도커 허브 로그인 > 실행 중인 도커 컨테이너 삭제 > 도커 허브에서 도커 이미지 pull > 도커 이미지로 8080 포트 도커 컨테이너 실행
    - name: Deploy to server
      uses: appleboy/ssh-action@master
      id: deploy
      with:
        host: ${{ secrets.HOST }} #EC2 인스턴스의 탄력적 IP
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.KEY }} #EC2 인스턴스 생성 시 생성한 키 페어 .pem 파일 복붙 (begin 부터 end 까지 전체 복붙)
        script: |
          echo "${{ secrets.DOCKER_PWD }}" | sudo docker login -u "${{ secrets.DOCKER_NAME }}" --password-stdin
          sudo docker rm -f rtb-container
          sudo docker pull ${{ secrets.DOCKER_REPO }}:latest
          sudo docker run -e ENCRYPT_KEY=${{ secrets.ENCRYPT_KEY }} -d --name rtb-container -p 8080:8080 ${{ secrets.DOCKER_REPO }}:latest
